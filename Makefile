# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.37 88/10/08 20:08:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# X Window System Makefile generated from template file Imake.tmpl
# $XConsortium: Imake.tmpl,v 1.91 88/10/23 22:37:10 jim Exp $
#
# Do not change the body of the imake template file.  Server-specific
# parameters may be set in the appropriate .macros file; site-specific
# parameters (but shared by all servers) may be set in site.def.  If you
# make any changes, you'll need to rebuild the makefiles using
# "make World" (at best) or "make Makefile; make Makefiles" (at least) in
# the top level directory.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit Sun.macros to change

# platform:  $XConsortium: Sun.macros,v 1.52 88/10/23 11:00:55 jim Exp $
# operating system:   SunOS 3.4

BOOTSTRAPCFLAGS =
             AS = as
             CC = gcc
            CPP = /lib/cpp
             LD = ld
           LINT = lint
        INSTALL = install
           TAGS = ctags
             RM = rm -f
             MV = mv
             LN = ln -s
         RANLIB = ranlib
RANLIBINSTFLAGS = -t
             AR = ar clq
             LS = ls
       LINTOPTS = -xz
    LINTLIBFLAG = -C
           MAKE = make
STD_CPP_DEFINES =
    STD_DEFINES = -DSYSV

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.16 88/10/12 10:30:24 jim Exp $

###########################################################################
# definitions common to all Makefiles - do not edit

          SHELL =  /bin/sh

        DESTDIR = /usr
      USRLIBDIR = $(DESTDIR)/lib
         BINDIR = $(DESTDIR)/bin/X11
         INCDIR = $(DESTDIR)/include
         ADMDIR = $(DESTDIR)/usr/adm
         LIBDIR = $(USRLIBDIR)/X11
     LINTLIBDIR = $(USRLIBDIR)/lint
        FONTDIR = $(LIBDIR)/fonts
       XINITDIR = $(LIBDIR)/xinit
         XDMDIR = $(LIBDIR)/xdm
         UWMDIR = $(LIBDIR)/uwm
         AWMDIR = $(LIBDIR)/awm
         TWMDIR = $(LIBDIR)/twm
          DTDIR = $(LIBDIR)/dt
        MANPATH = /usr/man
  MANSOURCEPATH = $(MANPATH)/man
         MANDIR = $(MANSOURCEPATH)n
      LIBMANDIR = $(MANSOURCEPATH)n3
    XAPPLOADDIR = $(LIBDIR)/app-defaults

   INSTBINFLAGS = -m 0755
   INSTUIDFLAGS = -m 4755
   INSTLIBFLAGS = -m 0664
   INSTINCFLAGS = -m 0444
   INSTMANFLAGS = -m 0444
   INSTAPPFLAGS = -m 0444
  INSTKMEMFLAGS = -m 4755
        FCFLAGS = -t
    CDEBUGFLAGS = -O

        PATHSEP = /
         DEPEND = $(BINDIR)/makedepend
          IMAKE = $(BINDIR)/imake
            RGB = $(LIBDIR)/rgb
             FC = $(BINDIR)/bdftosnf
      MKFONTDIR = $(BINDIR)/mkfontdir
      MKDIRHIER = $(BINDIR)/mkdirhier.sh

         CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) $(STD_DEFINES) $(DEFINES)
      LINTFLAGS = $(LINTOPTS) $(INCLUDES) $(STD_DEFINES) $(DEFINES) -DLINT
        LDFLAGS = $(CDEBUGFLAGS) -L$(USRLIBDIR) $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)

       IRULESRC = $(LIBDIR)/imake.includes

   EXTENSIONLIB = $(USRLIBDIR)/libext.a
           XLIB = -lX11
         XMULIB = -lXmu
        OLDXLIB = $(USRLIBDIR)/liboldX.a
       XTOOLLIB = $(USRLIBDIR)/libXt.a
         XAWLIB = $(USRLIBDIR)/libXaw.a
       LINTXLIB = $(USRLIBDIR)/lint/llib-lX11.ln
        LINTXMU = $(USRLIBDIR)/lint/llib-lXmu.ln
      LINTXTOOL = $(USRLIBDIR)/lint/llib-lXt.ln
        LINTXAW = $(USRLIBDIR)/lint/llib-lXaw.ln
       INCLUDES = -I$(INCDIR)
      MACROFILE = Sun.macros
   ICONFIGFILES = $(IRULESRC)/Imake.tmpl \
			$(IRULESRC)/$(MACROFILE) $(IRULESRC)/site.def
  IMAKE_DEFINES =
      IMAKE_CMD = $(NEWTOP)$(IMAKE) -TImake.tmpl -I$(NEWTOP)$(IRULESRC) \
			-s Makefile $(IMAKE_DEFINES)
         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			.emacs_* tags TAGS make.log MakeOut

###########################################################################
# rules:  $XConsortium: Imake.rules,v 1.71 88/10/23 22:46:34 jim Exp $

###########################################################################
# start of Imakefile

       MENU_LIB = menus
      MENU_ARCH = $(MENU_LIB)/rtlmenu.a
     NEATEN_LIB = /grgr/neaten
    NEATEN_ARCH = $(NEATEN_LIB)/neaten.a
  SYS_LIBRARIES = -ll -lm
      OTHERSRCS = gram.y lex.l
         YFLAGS = -d
         HFILES = awm.h neaten.def.h neaten.ext.h support.h

# The following defines can be added to the approprate DEFINES macro
# (see below) to enable additional features.
#
# -DCONSOLE if you want output (stderr and stdout) to go to the system console.
#
# -DWMSTATE if you want the XA_WM_STATE atom to reflect the state of each
#     top-level window (I.E. iconified, not iconified, etc).
#
# -DRAINBOW if you want to be able to specify border colors on a client or
#     class basis.
#
# -DLOCKSCR if for some reason you want a lockscreen function built into
#     the window manager. Could be just as easily done by invoking a program,
#     but some like to put all their eggs in one basket.

# Use these macros if you want the RTL Neaten package.
# Also make sure that NEATEN_LIB points to the right place. See the README
# file for instructions (though you can just define this and give it a shot).
#       DEFINES = -DSYSFILE=\"$(AWMDIR)$(PATHSEP)system.awmrc\" -DNEATEN
#       LOCAL_LIBRARIES = $(NEATEN_ARCH) $(MENU_ARCH) $(XMULIB) $(XLIB)

# Use these macros if you don't want the RTL Neaten package.
        DEFINES = -DSYSFILE=\"$(AWMDIR)$(PATHSEP)system.awmrc\" -DWMSTATE -DLOCKSCR
        LOCAL_LIBRARIES = $(MENU_ARCH) $(XMULIB) $(XLIB)
        LINTLIBS = $(LINTXLIB)

SRCS=	globals.c Beep.c Bindings.c CircleDown.c CircleUp.c\
	Cursors.c Focus.c GetButton.c  GridBox.c Iconify.c Icons.c Lower.c\
	Menu.c Move.c MoveOpaque.c NewIconify.c Pause.c Push.c Error.c\
	Raise.c Refresh.c Resize.c Restart.c RubberBand.c StoreBox.c \
	StoreZap.c XError.c awm.c FocusChng.c Titlebar.c errHndlr.c \
	Grab.c menu_sup.c Gadget.c support.c exp_path.c Neaten.c \
	lockscreen.c Lock.c

OBJS=	gram.o lex.o globals.o Beep.o Bindings.o CircleDown.o CircleUp.o\
	Cursors.o Focus.o GetButton.o GridBox.o Iconify.o Icons.o Lower.o\
	Menu.o Move.o MoveOpaque.o NewIconify.o Pause.o Push.o Error.o\
	Raise.o Refresh.o Resize.o Restart.o RubberBand.o StoreBox.o \
	StoreZap.o XError.o awm.o FocusChng.o Titlebar.o errHndlr.o \
	Grab.o menu_sup.o Gadget.o support.o exp_path.o Neaten.o \
	lockscreen.o Lock.o

 PROGRAM = awm

all:: awm

awm: $(OBJS) $(MENU_ARCH)
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(LOCAL_LIBRARIES) $(LDFLAGS) $(SYSLAST_LIBRARIES)

relink::
	$(RM) $(PROGRAM)
	$(MAKE) $(MFLAGS) $(PROGRAM)

install:: awm
	$(INSTALL) -c $(INSTALLFLAGS) awm $(BINDIR)

install.man:: awm.man
	$(INSTALL) -c $(INSTMANFLAGS) awm.man $(MANDIR)/awm.n

depend:: $(DEPEND)

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(CFLAGS) -- $(SRCS)

$(DEPEND):
	@echo "making $@"; \
	cd $(DEPENDSRC); $(MAKE)

clean::
	$(RM) $(PROGRAM)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) gram.c lex.c $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

install:: system.awmrc
	$(INSTALL) -c $(INSTALLFLAGS) system.awmrc  $(AWMDIR)

$(MENU_ARCH)::
	@echo Making menu package...
	@(cd $(MENU_LIB); make CC=$(CC) CFLAGS="$(CFLAGS)")
	@echo done.

$(NEATEN_ARCH)::
	cp Makefile.rtl $(NEATEN_LIB)/Makefile
	@echo Making Neaten package
	@(cd $(NEATEN_LIB); make -f Makefile)
	@echo done.

clean::
	@echo Cleaning menus...
	@(cd $(MENU_LIB); make clean)
	@echo done.
	rm -f y.tab.h

noident::
	@echo Removing ident lines from awm...
	@for i in $(SRCS) $(OTHERSRCS) $(HFILES); do \
	sed -e '/#ident/D' < $$i > /tmp/x.$$i && \
	mv /tmp/x.$$i $$i ; \
	done
	@(cd $(MENU_LIB); make noident)
	@echo done.

nox11copy::
	@echo Removing ident lines from awm...
	@for i in $(SRCS) $(OTHERSRCS) $(HFILES); do \
	sed -e '/X11\/copyright/D' < $$i > /tmp/x.$$i && \
	mv /tmp/x.$$i $$i ; \
	done
	@(cd $(MENU_LIB); make nox11copy)
	@echo done.

###########################################################################
# Imake.tmpl common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

Makefile:: Imakefile \
	$(IRULESRC)/Imake.tmpl \
	$(IRULESRC)/Imake.rules \
	$(IRULESRC)/site.def \
	$(IRULESRC)/$(MACROFILE)
	-@if [ -f Makefile ]; then \
	echo "$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP)

$(IMAKE):
	@echo "making $@"; \
	cd $(IMAKESRC); $(MAKE) BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install done"

install.man::
	@echo "install.man done"

Makefiles::

###########################################################################
# dependencies generated by makedepend

